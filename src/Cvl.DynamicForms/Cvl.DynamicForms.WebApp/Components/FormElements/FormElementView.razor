@using Cvl.DynamicForms.Core.Models

@if (Model.Type == FormElementType.Text)
{
    <span data-bs-toggle="tooltip" data-bs-title=@Model.Description data-bs-placement="bottom">@Model.Name</span>
    <input id="e-@Model.Id" placeholder=@Model.Placeholder value="@Model.Value" />
}
else if (Model.Type == FormElementType.Date)
{
    <span data-bs-toggle="tooltip" data-bs-title=@Model.Description data-bs-placement="bottom">@Model.Name</span>
    <InputDate @bind-Value="Date"></InputDate>
}
else if (Model.Type == FormElementType.Bool)
{
    <span data-bs-toggle="tooltip" data-bs-title=@Model.Description data-bs-placement="bottom">@Model.Name</span>
    <input id="e-@Model.Id" placeholder=@Model.Placeholder type="checkbox" />

}
else if (Model.Type == FormElementType.Info)
{
    <p>@Model.Name</p>
}
else if (Model.Type == FormElementType.Combo)
{
    <span data-bs-toggle="tooltip" data-bs-title=@Model.Description data-bs-placement="bottom">@Model.Name</span>
    <select class="w-25" style="height:32px">
        @foreach (var s in Model.DataSource.Split(","))
        {
            <option>@s</option>
        }
    </select>
}
else if (Model.Type == FormElementType.Button)
{
    <button type="button" class="btn btn-light" style="background-color:#777" @onclick="ButtonClicked">@Model.Name</button>
}

@if (Model.IsRequired != null)
{
    <span class="alert-danger">*</span>
}


@code {
    [Parameter]
    public FormElement Model { get; set; }

    public DateTime? Date { get; set; }

    private async Task ButtonClicked()
    {
        
    }
}
