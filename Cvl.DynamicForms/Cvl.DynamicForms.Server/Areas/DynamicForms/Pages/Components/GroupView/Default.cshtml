@model Cvl.DynamicForms.Model.GroupVM
@{
    foreach (var el in Model.Properties)
    {
        if (el is Cvl.DynamicForms.Model.SimplePropertyVM prop)
        {
            <div class="row border py-1">
                <div class="col-3 col-form-label" data-bs-toggle="tooltip" data-bs-placement="top" title="@prop.Description">
                    @prop.Header
                    @if (prop.IsBigString)
                    {
                        <span onclick="showFullValue('@Model.MainObjectId', '@Model.MainObjectTypeFullname', '@prop.BindingPath')">
                            <i class="bi bi-arrow-up-right" style="font-size: 10px;"></i>
                        </span>
                    }
                </div>
                @await Component.InvokeAsync("PropertyView", prop)
            </div>
        }
        else if (el is Cvl.DynamicForms.Model.RegionVM region)
        {
            <div class="row border py-1">
                <div class="accordion" id="accordion@(region.PropertyUniqueName)" title="@region.BindingPath">
                    <div class="accordion-item border-0">
                        <h5 class="accordion-header" id="headingTwo">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" aria-expanded="false"
                                    data-bs-target="#collapse@(region.PropertyUniqueName)"
                                    aria-controls="collapse@(region.PropertyUniqueName)"
                                    onclick="getPropertyGridNode('@region.MainObjectId', '@region.MainObjectTypeFullname', 'dataholder@(region.PropertyUniqueName)', '@region.BindingPath', @(region.IsStatic ? "true" : "false") )">
                                <div class="col-3">
                                    <a href="@region.EditUrl">
                                        <span for="p11" class="form-label"> @region.PropertyName</span>
                                    </a>
                                </div>
                                <div class="col-7">
                                    <span id="p11" class="form-label">@region.PropertyValue</span>
                                </div>
                            </button>
                        </h5>
                        <div id="collapse@(region.PropertyUniqueName)" class="accordion-collapse collapse"
                             aria-labelledby="heading@(region.PropertyUniqueName)" data-bs-parent="#accordion@(region.PropertyUniqueName)">
                            <div class="accordion-body" id="dataholder@(region.PropertyUniqueName)">
                                @if (region.IsStatic == true)
                                {
                                    @await Component.InvokeAsync("PropertyView", el)
                                }
                                else
                                {
                                    <h4>Loading..</h4>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }


        @*else if (el is Cvl.DynamicForms.Model.PropertyGridVM pg)
            {
                if (pg.IsStatic == true)
                {

                }
                else
                {
                    <div class="row border py-1">
                        <div class="accordion" id="accordion@(pg.PropertyUniqueName)">
                            <div class="accordion-item border-0">
                                <h5 class="accordion-header" id="headingTwo">
                                    <button class="accordion-button collapsed" onclick="getPropertyGridNode(@idToAjax.ToString(), '@pg.PropertyValue', 'dataholder@(pg.PropertyUniqueName)', '@pg.BindingPath')" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(pg.PropertyUniqueName)" aria-expanded="false" aria-controls="collapse@(pg.PropertyUniqueName)">
                                        <div class="col-3">
                                            <a href="@pg.EditUrl">
                                                <span for="p11" class="form-label"> @pg.PropertyName</span>
                                            </a>
                                        </div>
                                        <div class="col-7">
                                            <span id="p11" class="form-label">@pg.PropertyValue</span>
                                        </div>
                                    </button>
                                </h5>
                                <div id="collapse@(pg.PropertyUniqueName)" class="accordion-collapse collapse" aria-labelledby="heading@(pg.PropertyUniqueName)" data-bs-parent="#accordion@(pg.PropertyUniqueName)">
                                    <div class="accordion-body" id="dataholder@(pg.PropertyUniqueName)">

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }


            }
            else if (el is Cvl.DynamicForms.Model.ViewModel.GridViewModel gridElement)
            {
                <div class="row border py-1">
                    <div class="accordion" id="accordion@(gridElement.PropertyName)">
                        <div class="accordion-item border-0">
                            <h5 class="accordion-header" id="heading@(gridElement.PropertyName)">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(gridElement.PropertyName)" aria-expanded="false" aria-controls="collapse@(gridElement.PropertyName)">
                                    <div class="col-3">
                                        <a href="@gridElement.EditUrl">
                                            <span for="p11" class="form-label"> @gridElement.PropertyName</span>
                                        </a>
                                    </div>
                                    <div class="col-7">
                                        <span id="p11" class="form-label">@gridElement.PropertyValue</span>
                                    </div>
                                </button>
                            </h5>
                            <div id="collapse@(gridElement.PropertyName)" class="accordion-collapse collapse" aria-labelledby="heading@(gridElement.PropertyName)" data-bs-parent="#accordion@(gridElement.PropertyName)">
                                <div class="accordion-body">
                                    @await Component.InvokeAsync("GridView", gridElement)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }*@
    }
}


